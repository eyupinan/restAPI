version: '2'
services:
  mongodb:
    image : mongo
    container_name: mongodb
    environment:
    - PUID=1000
    - PGID=1000
    volumes:
    - /home/barry/mongodb/database:/data/db
    ports:
    - 27017:27017
    expose: 
    - "27017"
    restart: unless-stopped
    command: mongod --quiet --logpath /dev/null
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    expose:
    - "2181"
    environment: 
      ZOO_LOG4J_PROP: "INFO,ROLLINGFILE"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
    - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    logging: 
      driver: "none"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "restTopic:1:1"
      #KAFKA_LOG4J_LOGGERS: org.apache.zookeeper=ERROR, org.apache.kafka=ERROR, kafka=ERROR, kafka.cluster=ERROR, kafka.controller=ERROR, kafka.coordinator=ERROR, kafka.log=ERROR, kafka.server=ERROR, kafka.zookeeper=ERROR, state.change.logger=ERROR
      #KAFKA_LOG4J_LOGGERS: "kafka.controller=ERROR, kafka.producer.async.DefaultEventHandler=ERROR, state.change.logger=ERROR"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=WARN,kafka.producer.async.DefaultEventHandler=WARN,state.change.logger=WARN,kafka=WARN"
  web:
    build: ./rest    
    container_name: restAPI
    ports: 
      - "5000:5000"
    restart: always
    volumes:
      - .:/codes
  consumer:
    container_name: kafkaConsumer
    build : ./consumer
    restart: always
  dashboard:
    container_name: dashboard
    build : ./dashboard
    restart: always
    ports:
      - "8988:8988"
    expose: 
      - "8988"

  
